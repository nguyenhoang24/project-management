server:
  port: 8088
  servlet:
    context-path: /api

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/thesis_management?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    driverClassName: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
#    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
#        format_sql: true

  #Email configuration
  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth : true
          socketFactory.fallback :  false
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      debug: true
    username: thaihauu14@gmail.com
    password: tjklkzeolbuckrhv

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


  main:
    allow-bean-definition-overriding: true
# JWT Configuration
application:
  jwt:
    secretKey: elearninguserservicenjvnvnsjvdvnsvnsvsjvnsvjdvn5AldNYDhCaiCmGiLDDmsmsmfvndvnsdvnsdvnsvnsdvnksvnksdvndjsvnsdkvnskvsjkvsvjkvbkjsdvskvsvbdvdvn
    tokenPrefix : Bearer
    expirationDateInMs : 2592000
    refreshExpirationDateInMs : 5184000
jwt:
  expiration: 2592000 #30days = 30*24*60*60
  expiration-refresh-token: 5184000 #60days
  secret: elearninguserservicenjvnvnsjvdvnsvnsvsjvnsvjdvn5AldNYDhCaiCmGiLDDmsmsmfvndvnsdvnsdvnsvnsdvnksvnksdvndjsvnsdkvnskvsjkvsvjkvbkjsdvskvsvbdvdvn

# Amazon S3 Configuration
amazonProperties:
  endpointUrl: https://s3.ap-southeast-1.amazonaws.com
  accessKey: AKIA4IQR3FNC2Q4P656T
  secretKey: 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
  bucketName: thesisbucket
  region: ap-southeast-1

# CORS Configuration
web:
  cors:
    allowed-origins: "http://localhost:3000"
    allowed-methods: GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
    max-age: 3600
    allowed-headers: "Requestor-Type"
    exposed-headers: "X-Get-Header"

# Firebase Configuration
firebase:
  googleCredentials: config/firebase-service-account.json

# Logging Configuration
logging:
  level:
    org.springframework.security: TRACE

frontend:
  caller:
    host: http://localhost:3000

upload:
  url: http://localhost:8088
